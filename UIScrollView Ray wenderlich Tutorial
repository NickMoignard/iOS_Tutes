UIScrollView Ray wenderlich Tutorial

Allow a view to be scrolled through!

	1.	place a scollview inside the UIView
	2.	Set Auto Layout Rules 
		->	select scrollview. Pin scollview to top, bottom, leading, trailing (constraints to 0)
		->	select imageview. apply same constaints as above

		make sure to resolve auto layout issues and update frames

Add Zooming
	
	1.	 add outlets for the margin constraints for the UIView (note: not necesary for the UIScrollView) & and outlet for the scrollview object

	2.	connect outlets in storyboard, set viewcontroller as the scollviews delegate

	3.	add UIScrollViewDelegate method to viewcontroller as an extension
		↳
		extension ZoomedPhotoViewController: UIScrollViewDelegate {


			func viewForZoomingInScrollView(scrollView: UIScrollView) -> UIView? {
				return imageView
			}
		}

		//note: important! this tells the controller that the view should be made bigger and smaller when the scroll view is pinched. hence we tell it in this case that it is the image view

		↳
		private func updateMinZoomScaleForSize(size: CGSize) {
			let widthScale = size.width / imageView.bounds.width
			let heightScale = size.height / imageView.bounds.height
			let minScale = min(widthScale, heightScale)

			scrollView.minimumZoomScale = minScale

			scrollView.zoomScale = minScale
		}

		// work out the minimum zoom scale for the scrollView. i.e a scale of 1 would describe content at normal size. scale>1 == zoomed in, scale<1 == zoomed out

		//Calculate minimum scale by seeing how many times the width / height fit into the views bounds. use min function to determine which is smaller between height and width

		// the maximum zoom scale is 1. this stops a user from zooming in beyond original size. this stops the image from becoming blurry.

		↳
		override func viewDidLayoutSubviews() {
			super.viewDidLayoutSubviews()

			updateMinZoomScaleForSize(view.bounds.size)
		}

		//update the minimum zoom scale each time the controller updates it's subviews

